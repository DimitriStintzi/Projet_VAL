
Pour nos rames, nous avons une classe rame qui prend en compte le numéro de série, le nombre de passagers et un état permettant de gérer l'avancement des rames.
Selon notre cahier des charges, nous avons mis en place un circuit fermé où les rames s'arrêtent à chaque station. 
Nous avons également intégré un système d'accélération et de ralentissement, avec une vitesse qui varie en fonction de la proximité ou de l'éloignement d'une station.

Nous avons un système de distance de sécurité entre chaque rame durant leur trajet avec un demi-tour par des voies de réserve 
et un bouton d’arrêt d’urgence qui a pour but de stopper brutalement l’ensemble des rames. 
 
Maintenant en ce qui concerne notre projet, notre arrêt d’urgence n’est pas totalement au point, on ne peut qu'arrêter la première rame avec notre bouton. 
Pour ce qui est des distances de sécurité entre chaque rame celle-ci n’est pas parfaite, la première rame finie par dépasser nos rames derrière si le superviseur n’appui pas sur le bouton.


Concernant les stations, nous avons créés une classe englobant les différentes variables et fonctions permettant de gérer les objets stations. Nous avons le nom de la station, si elle est occupée ou non, si les portes de la station sont ouvertes ou non, si la rame de métro peut repartir, ainsi que le nombre de personnes à quai et la position sur l'écran de la station. Les fonctions associées à la classe permettent d'accéder et de modifier chaque information, ainsi que des constructeurs. Nous avons également développé une fonction permettant d'incrémenter de manière aléatoire le nombre de passagers en attente sur le quai.   
Concernant l'aléatoire, il a fallu trouver une manière d'avoir une valeur aléatoire différente pour chaque station, car avec l'aléatoire normalement utilisé, on se base sur l'heure du processeur en seconde qui est donc le même pour toutes les stations.  

Aussi, on a créé des détections de clics sur différents éléments de l'écran, ce qui nous permet de détecter et ainsi afficher les informations d'une rame ou d'une station avec toutes les informations liées à celles-ci.  
Concernant les stations, elles sont vertes si les stations sont libres et rouges si une rame est à l'arrêt dedans.  
Aussi, on détecte si la rame se situe aux coordonnées de la station pour transférer les passagers entre la station et la rame. 

Cependant, concernant la mise a jour des informations, que ce soit si une rame est sur une station, ou le transfert de passagers par exemple, tout ne fonctionne pas comme prévu.  
Aussi, un problème a était trouvé concernant le changement d'état des stations (leur couleur).  
Nous avions pensé à définir la couleur quand une rame est sur la station et de remettre la couleur quand aucune rame n'est sur la station mais cela faisait crasher instantanément le programme. (surement car il essayait de mettre la couleur verte en boucle ce qui faisait utiliser trop de calcul). 